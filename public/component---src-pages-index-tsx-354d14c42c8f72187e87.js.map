{"version":3,"file":"component---src-pages-index-tsx-354d14c42c8f72187e87.js","mappings":"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","sources":["webpack://gatsby-starter-typescript-plus/./src/components/Card.tsx","webpack://gatsby-starter-typescript-plus/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { breakpoints, colors } from \"../styles/variables\";\nimport { Link } from \"gatsby\";\n\nconst CardLink = styled(Link)`\n  width: 100%;\n  height: 100%;\n  color: black;\n  margin: 1rem;\n  font-size: 21pt;\n  text-align: center;\n  background-color: ${colors.background};\n  border-radius: 25px 0;\n  border: 2px solid white;\n  @media (max-width: ${breakpoints.sm + \"px\"}) {\n    font-size: 15pt;\n    width: 90vw;\n    margin: 0;\n    margin-bottom: 2rem;\n  }\n  &:hover {\n    background-color: ${colors.brand};\n    text-decoration: none;\n  }\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\nconst ButtonText = styled.div`\n  padding: 1.5rem 2rem;\n`;\n\ninterface CardProps {\n  url?: string;\n}\n\nconst Card: React.FC<CardProps> = ({ children, url }) => (\n  <CardLink to={url ? url : \"/\"}>\n    <ButtonText>{children}</ButtonText>\n  </CardLink>\n);\n\nexport default Card;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\nimport Page from \"../components/Page\";\nimport IndexLayout from \"../layouts\";\nimport Card from \"../components/Card\";\n\nimport { breakpoints } from \"../styles/variables\";\nimport { widths } from \"../styles/variables\";\nimport { getEmSize } from \"../styles/mixins\";\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  max-width: ${getEmSize(widths.lg)}em;\n  @media (max-width: ${breakpoints.sm + \"px\"}) {\n    flex-direction: column;\n    align-items: center;\n    margin-top: 1rem;\n  }\n  @media (max-width: ${breakpoints.xs + \"px\"}) {\n    margin-top: 1rem;\n  }\n`;\n\nconst SloganWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  display: block;\n  width: 55rem;\n\n  margin-top: 3rem;\n  margin-bottom: 2rem;\n  text-align: left;\n  font-style: italic;\n  @media (max-width: ${breakpoints.xl + \"px\"}) {\n    width: 75vw;\n    margin-top: 2rem;\n    min-height: 6rem;\n  }\n\n  @media (max-width: ${breakpoints.sm + \"px\"}) {\n    margin-top: 1rem;\n    margin-bottom: 0;\n    font-size: 20pt;\n  }\n`;\n\nconst VaryingWord = styled.span`\n  display: inline;\n  color: red;\n`;\n\nconst PictureWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  justify-self: center;\n  flex-wrap: wrap;\n  width: 90vw;\n`;\n\nconst ProfilePic = styled(Img)`\n  width: 15%;\n  border-radius: 10% 0;\n  @media (max-width: ${breakpoints.md + \"px\"}) {\n    width: 25%;\n  }\n`;\n\nlet interests = [\"Apple\", \"music\", \"smart home\", \"golf\", \"cat\"];\nlet i = 0;\nfunction getWord() {\n  let word = interests[i];\n  i += 1;\n  if (i > interests.length - 1) {\n    i = 0;\n  }\n  return word;\n}\n\nexport default class IndexPage extends React.Component {\n  constructor(props: Readonly<{}>) {\n    super(props);\n  }\n  wordErased = false;\n  state = {\n    changingWord: getWord(),\n    nextWord: getWord(),\n    wordBuilderIndex: 0,\n    intervalID: 1,\n    timerID: 1,\n  };\n\n  componentDidMount() {\n    this.startInterval();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalID);\n    clearTimeout(this.state.timerID);\n  }\n\n  setIntervalState() {\n    let intervalID = setInterval(() => this.handleWordChange(), 150);\n    this.setState({ intervalID: intervalID });\n  }\n\n  startInterval() {\n    clearInterval(this.state.intervalID);\n    clearTimeout(this.state.timerID);\n    let timerID = setTimeout(() => this.setIntervalState(), 1500);\n    this.setState({ timerID: timerID });\n  }\n\n  handleWordChange() {\n    if (!this.state.changingWord) {\n      this.wordErased = true;\n    }\n\n    if (!this.wordErased) {\n      this.setState({\n        changingWord: this.state.changingWord.slice(0, -1),\n      });\n    } else if (this.state.changingWord != this.state.nextWord) {\n      this.setState({\n        changingWord:\n          this.state.changingWord +\n          this.state.nextWord[this.state.wordBuilderIndex],\n        wordBuilderIndex: this.state.wordBuilderIndex + 1,\n      });\n    } else {\n      this.setState({\n        nextWord: getWord(),\n        wordBuilderIndex: 0,\n      });\n      this.wordErased = false;\n      this.startInterval();\n    }\n  }\n\n  render() {\n    return (\n      <IndexLayout>\n        <Page>\n          <PicturesOfMe />\n          <SloganWrapper>\n            <Title>\n              Developer, engineer and{\" \"}\n              <VaryingWord>{this.state.changingWord}</VaryingWord> enthusiast\n            </Title>\n          </SloganWrapper>\n          <CardWrapper>\n            <Card url=\"/projects\">Projects</Card>\n            <Card url=\"/about\">About me</Card>\n          </CardWrapper>\n        </Page>\n      </IndexLayout>\n    );\n  }\n}\n\nconst PicturesOfMe = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      meCap: file(relativePath: { eq: \"meCap.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      meSnow: file(relativePath: { eq: \"meSnow.jpeg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      meBirthday: file(relativePath: { eq: \"meBirthday.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      meNature: file(relativePath: { eq: \"meNature.jpeg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <PictureWrapper>\n      <ProfilePic\n        fluid={{\n          ...data.meCap.childImageSharp.fluid,\n          aspectRatio: 3 / 4,\n        }}\n      />\n      <ProfilePic\n        fluid={{\n          ...data.meSnow.childImageSharp.fluid,\n          aspectRatio: 3 / 4,\n        }}\n      />\n      <ProfilePic\n        fluid={{\n          ...data.meBirthday.childImageSharp.fluid,\n          aspectRatio: 3 / 4,\n        }}\n      />\n      <ProfilePic\n        fluid={{\n          ...data.meNature.childImageSharp.fluid,\n          aspectRatio: 3 / 4,\n        }}\n      />\n    </PictureWrapper>\n  );\n};\n"],"names":["CardLink","_styled","Link","target","colors","background","breakpoints","sm","brand","ButtonText","name","styles","_ref","children","url","___EmotionJSX","to","CardWrapper","getEmSize","widths","lg","xs","SloganWrapper","Title","xl","VaryingWord","PictureWrapper","ProfilePic","Img","md","interests","i","getWord","word","length","IndexPage","_React$Component","props","_this","call","wordErased","state","changingWord","nextWord","wordBuilderIndex","intervalID","timerID","_inheritsLoose","_proto","prototype","componentDidMount","this","startInterval","componentWillUnmount","clearInterval","clearTimeout","setIntervalState","setInterval","handleWordChange","setState","setTimeout","slice","render","IndexLayout","Page","PicturesOfMe","Card","React","data","useStaticQuery","fluid","meCap","childImageSharp","aspectRatio","meSnow","meBirthday","meNature"],"sourceRoot":""}